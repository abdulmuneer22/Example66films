apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

greendao {
    schemaVersion 2
    daoPackage rootProject.ext.android.applicationId + '.db.dao'
    targetGenDir 'src/main/java-gen'
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        applicationId rootProject.ext.android.applicationId
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

//        ndk {
//            abiFilters 'armeabi'
//        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    signingConfigs {

        release {
            keyAlias 'films66'
            keyPassword '66film'
            storeFile file('../films66.jks')
            storePassword '66film'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            applicationIdSuffix ".debug"
            buildConfigField "boolean", "IS_DEBUG", "true"
            resValue "string", "app_name", "多动娱乐Debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        release {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "IS_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "${variant.productFlavors[0].name}_v" +
                                "${variant.productFlavors[0].versionName}" +
//                                "_${releaseTime()}" +
                                ".apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    productFlavors {
        online {
            versionName "1.0.0"
            resValue "string", "app_name", "多动娱乐"
        }
    }
}

def releaseTime() {
    return new Date().format("yyyyMMddHH")
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':corelibrary')
    compile project(':videoview')
}
